/*
 * Api calls
 *
 */

function TwitchApi () {
    var config  = {};

    this.constructor = function () {
        config = {
            channel:'', // your channel name goes here
            scope:'user_read user_follows_edit channel_read channel_editor channel_stream channel_subscriptions',
            token:'',
            limit:100, // MAX 100
            offset:0, // default = 0
            direction:'ASC', // default = ASC
            clientId:'', // client id generated by registering the app in your twitch profile: http://www.twitch.tv/settings/connections
            baseUrl:'https://api.twitch.tv/kraken',
            redirectUrl:'http://localhost:63342/easy-twitch-javascript-api/index.html', // callback url location where you have your script running must run with a webserver (wamp xamp are good examples)
            header: {
                accept:'application/vnd.twitchtv.v2+json'
            }
        }
    };

    this.constructor();

    this.getConfig = function(){
        return config
    }
}

TwitchApi.prototype.getChannelsFollows = function (callback,channel,limit,offset,direction) {
    url = this.getConfig().baseUrl + '/channels/' + this.getChannel(channel) + '/follows' + this.getAuth() + this.getPageParams(limit,offset,direction);
    this.restCall('GET',url,callback)
};

TwitchApi.prototype.getChannelsSubscriptions = function (callback,channel,limit,offset,direction){
    url = this.getConfig().baseUrl + '/channels/' + this.getChannel(channel) + '/subscriptions' + this.getAuth() + this.getPageParams(limit,offset,direction);
    this.restCall('GET',url,callback)
};

TwitchApi.prototype.restCall = function (type,url,callback) {
    console.log(this.getChannel(this.getConfig().channel));
    $(document).ready(function() {
        $.ajax({
            url: url,
            type: type,
            contentType: 'application/json',
            dataType: 'jsonp',
            success: function(response) { callback(response) },
            error: function() { console.log("Failed to execute " + arguments.callee.name) }
        });
    });
};

TwitchApi.prototype.initializeAuth = function (){
    if (this.urlParam('access_token')){
        console.log("access_token found");
        this.setToken()
    } else {
        console.log("access_token not found");
        this.appLoginRedirect()
    }
};

/*
 * Api Tools
 *
 */

TwitchApi.prototype.getPageParams = function (limit,offset,direction){
    limit = limit !== undefined ? limit : this.getConfig().limit;
    offset = offset !== undefined ? offset : this.getConfig().offset;
    direction = direction !== undefined ? direction : this.getConfig().direction;
    return '&limit='+ limit +'&offset='+ offset +'&direction='+ direction
};

TwitchApi.prototype.getChannel = function (channel){
    return channel !== undefined || channel == false ? channel : this.getConfig().channel
};


/*
 * Authenticate
 *
 */

TwitchApi.prototype.getAuth = function () {
	return '?oauth_token=' + this.getConfig().token
};

TwitchApi.prototype.setToken = function (token){
	console.log("Setting token:" + this.urlParam('access_token'))
	if (token) {
        this.getConfig().token = token
	}
	else {
        this.getConfig().token = this.urlParam('access_token')
	}
};

TwitchApi.prototype.appLoginRedirect = function (){
    console.log("Redirecting to twitch auth screen");
    window.location.replace(this.getConfig().baseUrl + '/oauth2/authorize?response_type=token&client_id='+this.getConfig().clientId+'&redirect_uri='+this.getConfig().redirectUrl+'&scope='+this.getConfig().scope);
};

TwitchApi.prototype.urlParam = function(name){
    var results = new RegExp('[\?(&|#)]' + name + '=([^&#]*)').exec(window.location.href);
    if (results==null){
        return null;
    }
    else{
        return results[1] || 0;
    }
};